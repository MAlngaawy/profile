{"version":3,"sources":["assets/avatar.jpg","components/About.js","components/Connect.js","components/projects/Todo-app.js","components/projects/posts.js","components/Projects.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","About","className","Social","target","rel","href","Connect","ToDo","notes","data","useState","myData","setData","id","username","note","done","delete","newNote","setNewNote","hide","setHide","handleChange","event","val","value","length","name","deleteNote","doneNote","Alert","color","type","placeholder","onChange","htmlFor","icon","faPlus","onClick","e","preventDefault","setTimeout","filter","map","key","faCircle","faTrashAlt","faCheckCircle","posts","all","Posts","obj","setObj","showMore","post","src","avatar","alt","first_name","last_name","date","str","arr","content","split","i","push","join","txt","like","addLike","faHeart","mainProjectsData","url","MainProjects","projects","project","Projects","match","useRouteMatch","history","useHistory","console","log","useParams","slug","faArrowLeft","to","activeClassName","path","SideBar","exact","Boolean","window","location","hostname","ReactDOM","render","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.257b869f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.d854840c.jpg\";","import React from 'react';\r\n\r\nexport default function About() {\r\n  return (\r\n    <div className='right-side about'>\r\n      <h1>About Me</h1>\r\n      <div className='intro-text'>\r\n        <p>\r\n          Hey  my name is Mohammed Abd-ulmoneim, you can called me \"Mohammed Alngaawy\"<br/>\r\n          i'm a <b>frontend developer</b>, I love using Code to translate the amazing and creative\r\n          designs to a real web applications\r\n        </p>\r\n      </div>\r\n      <h5>My Skills</h5>\r\n      <ul>\r\n        <li>Html</li>\r\n        <li>Css</li>\r\n        <li>Sass</li>\r\n        <li>Bootstrap</li>\r\n        <li>JavaScript</li>\r\n        <li>jQuery</li>\r\n        <li>React.js</li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport '../css/App.css';\r\n\r\n\r\n\r\nfunction Social() {\r\n  return (\r\n    <div className='social'>\r\n      <h3>You can find me on</h3>\r\n      <ul>\r\n        <li>\r\n          <a target='_blank' rel=\"noopener noreferrer\" href='https://www.facebook.com/mohammed.Alngaawy'> Facebook </a>\r\n        </li>\r\n        <li>\r\n          <a target='_blank'  rel=\"noopener noreferrer\" href='https://twitter.com/malngaawy'> Twitter </a>\r\n        </li>\r\n        <li>\r\n          <a target='_blank' rel=\"noopener noreferrer\"  href='https://www.instagram.com/moalngaawy/'>Instagram</a>\r\n        </li>\r\n        <li>\r\n          <a target='_blank' rel=\"noopener noreferrer\"  href='linkedin.com/in/mohammed-alngaawy-352659147'>Linked In</a>\r\n        </li>\r\n        <li>\r\n          <a target='_blank' rel=\"noopener noreferrer\"  href='https://github.com/MAlngaawy'>Github</a>\r\n        </li>\r\n      </ul>\r\n      <h4>Or You Can message me  Direct by <b><a href=\"mailto:m.alngaawy@yahoo.com\">Gmail</a></b> </h4>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default function Connect() {\r\n  return (\r\n    <div className='right-side connect'>\r\n      <h1>Connect Me</h1>\r\n      <Social />\r\n    </div>\r\n  )\r\n}","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlus,\r\n  faTrashAlt,\r\n  faCircle,\r\n  faCheckCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport data from \"../../notes.json\";\r\nimport { Alert } from \"reactstrap\";\r\n\r\n// ToDo Component\r\nexport default function ToDo() {\r\n  let notes = data;\r\n  const [myData, setData] = useState(notes);\r\n  const [newNote, setNewNote] = useState({\r\n    id: \"\",\r\n    username: \"\",\r\n    note: \"\",\r\n    done: false,\r\n    delete: false,\r\n  });\r\n  const [hide, setHide] = useState(\"d-none\");\r\n\r\n  const handleChange = (event) => {\r\n    const val = event.target.value;\r\n    setNewNote({\r\n      ...newNote,\r\n      id: myData.length + 1,\r\n      [event.target.name]: val, // create a dynamic key name in the object\r\n    });\r\n  };\r\n\r\n  const addNote = (e) => {\r\n    e.preventDefault();\r\n    if (newNote.username !== \"\" && newNote.note !== \"\") {\r\n      setData([...myData, newNote]);\r\n      setNewNote({ ...newNote, username: \"\", note: \"\" });\r\n    } else {\r\n      setTimeout(() => {\r\n        setHide(\"\");\r\n      }, 100);\r\n      setTimeout(() => {\r\n        setHide(\"d-none\");\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  const deleteNote = (note) => {\r\n    setData([...myData, (myData[note.id - 1].delete = true)]);\r\n  };\r\n\r\n  const doneNote = (note) => {\r\n    setData([\r\n      ...myData,\r\n      (myData[note.id - 1].done = !myData[note.id - 1].done),\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo-com\">\r\n      <div className=\"out-side\">\r\n        <Alert color=\"danger\" className={hide}>\r\n          You Can't add an empty note, Bitch!!!\r\n        </Alert>\r\n        <form>\r\n          <input\r\n            className=\"name-field\"\r\n            type=\"text\"\r\n            value={newNote.username}\r\n            name=\"username\"\r\n            placeholder=\"Write Your Name\"\r\n            onChange={handleChange}\r\n          />\r\n          <input\r\n            className=\"note-field\"\r\n            type=\"text\"\r\n            value={newNote.note}\r\n            name=\"note\"\r\n            placeholder=\"The Note...\"\r\n            onChange={handleChange}\r\n          />\r\n          <label htmlFor=\"submit\" className=\"add-note\">\r\n            {\" \"}\r\n            <FontAwesomeIcon icon={faPlus} />{\" \"}\r\n          </label>\r\n          <input\r\n            type=\"submit\"\r\n            id=\"submit\"\r\n            value=\"\"\r\n            className=\"add-note-btn\"\r\n            onClick={addNote}\r\n          />\r\n        </form>\r\n      </div>\r\n      <div className=\"in-side\">\r\n        {/* For Not Done Notes */}\r\n        {myData\r\n          .filter((note) => note.delete === false && note.done === false)\r\n          .map((note) => (\r\n            <div className=\"single-note\" key={note.id}>\r\n              <div className=\"note-content\">\r\n                <h4 className=\"username\">{note.username}</h4>\r\n                <p className=\"the-note\">{note.note}</p>\r\n              </div>\r\n              <div className=\"command\">\r\n                <div className=\"done\">\r\n                  <FontAwesomeIcon\r\n                    className=\"icon\"\r\n                    icon={faCircle}\r\n                    onClick={() => doneNote(note)}\r\n                  />\r\n                </div>\r\n                <div className=\"delete\">\r\n                  <FontAwesomeIcon\r\n                    className=\"icon\"\r\n                    icon={faTrashAlt}\r\n                    onClick={() => deleteNote(note)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n\r\n        {/* For Done Notes */}\r\n        {myData\r\n          .filter((note) => note.done === true && note.delete === false)\r\n          .map((note) => (\r\n            <div className=\"single-note done\" key={note.id}>\r\n              <div className=\"note-content\">\r\n                <h4 className=\"username\">{note.username}</h4>\r\n                <p className=\"the-note\">{note.note}</p>\r\n              </div>\r\n              <div className=\"command\">\r\n                <div className=\"done\">\r\n                  <FontAwesomeIcon\r\n                    className=\"icon\"\r\n                    icon={faCheckCircle}\r\n                    onClick={() => doneNote(note)}\r\n                  />\r\n                </div>\r\n                <div className=\"delete\">\r\n                  <FontAwesomeIcon\r\n                    className=\"icon\"\r\n                    icon={faTrashAlt}\r\n                    onClick={() => deleteNote(note)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport posts from \"../../posts.json\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfor (let post of posts) {\r\n  post.all = false;\r\n}\r\n\r\nexport default function Posts() {\r\n  const [obj, setObj] = useState(posts);\r\n\r\n  const addLike = (post) => {\r\n    setObj([...obj, (obj[post.id - 1].like += 1)]);\r\n  };\r\n\r\n  const txt = (post) => {\r\n    let str = [];\r\n    let arr = post.content.split(\" \");\r\n    for (let i = 0; str.length < 10; i++) {\r\n      str.push(arr[i]);\r\n    }\r\n    let final = str.join(\" \");\r\n    return final;\r\n  };\r\n\r\n  const showMore = (post) => {\r\n    setObj([...obj, (obj[post.id - 1].all = !obj[post.id - 1].all)]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"posts\">\r\n      {posts.map((post) => (\r\n        <div key={post.id} className=\"post\">\r\n          <div className=\"user-info\">\r\n            <img className=\"avatar\" src={post.avatar} alt=\"avatar\" />\r\n            <div className=\"username-div\">\r\n              <h5 className=\"username\">\r\n                {post.first_name} {post.last_name}\r\n              </h5>\r\n              <span className=\"date\">{post.date}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"post-content\">\r\n            {post.all === false ? (\r\n              <p className=\"post-paragraph\">\r\n                {\" \"}\r\n                {txt(post) + \". . . .\"}{\" \"}\r\n                <span onClick={() => showMore(post)}>(more)</span>\r\n              </p>\r\n            ) : (\r\n              <p className=\"post-paragraph\">\r\n                {\" \"}\r\n                {post.content}{\" \"}\r\n                <span onClick={() => showMore(post)}>(Less)</span>\r\n              </p>\r\n            )}\r\n          </div>\r\n          <div className=\"likes\">\r\n            <span className=\"likes-num\"> {post.like} Like </span>\r\n            <span className=\"like-btn\" onClick={() => addLike(post)}>\r\n              <FontAwesomeIcon icon={faHeart} />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Switch,\r\n  Route,\r\n  NavLink,\r\n  useRouteMatch,\r\n  useHistory,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport ToDo from \"./projects/Todo-app\";\r\nimport Posts from \"./projects/posts\";\r\n\r\nconst mainProjectsData = [\r\n  {\r\n    name: \"SkillShare\",\r\n    url: \"https://angry-lamport-b8be47.netlify.com/\",\r\n  },\r\n  {\r\n    name: \"Top Gym\",\r\n    url: \"https://quizzical-perlman-fe3bb8.netlify.com/\",\r\n  },\r\n  {\r\n    name: \"Photo Maker\",\r\n    url: \"https://elated-kalam-fa733b.netlify.com/\",\r\n  },\r\n  {\r\n    name: \"Rock Paper Scissors Game\",\r\n    url: \"https://malngaawy.github.io/simple-game/\",\r\n  },\r\n];\r\n\r\nfunction MainProjects() {\r\n  const projects = mainProjectsData;\r\n  return (\r\n    <div className=\"main-projects\">\r\n      <h3>\r\n        Here is the main projects i have created .. if you need more you can\r\n        check the simple projects above\r\n      </h3>\r\n      <ul>\r\n        {projects.map((project) => (\r\n          <li className=\"single-project\" key={project.name}>\r\n            <h3>\r\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href={project.url}>\r\n                {\" \"}\r\n                {project.name}{\" \"}\r\n              </a>\r\n            </h3>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function Projects() {\r\n  let match = useRouteMatch();\r\n\r\n  function BackButton() {\r\n    let history = useHistory();\r\n\r\n    function handleClick() {\r\n      history.push(\"/projects\");\r\n      console.log(useParams.slug);\r\n    }\r\n\r\n    return (\r\n      <h5 onClick={handleClick} className=\"all-projects-btn\">\r\n        <FontAwesomeIcon icon={faArrowLeft} className=\"arrow\" />\r\n        All Projects\r\n      </h5>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"projects right-side\">\r\n      <BackButton />\r\n      <div className=\"projects-navbar\">\r\n        <ul>\r\n          <li>\r\n            <NavLink to={`${match.url}/todo-app`} activeClassName=\"active\">\r\n              ToDO App\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to={`${match.url}/posts`} activeClassName=\"active\">\r\n              Posts App\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <Switch>\r\n        <Route path={`${match.path}/:todo-app`}>\r\n          {\" \"}\r\n          <ToDo />{\" \"}\r\n        </Route>\r\n        <Route path={`${match.path}/:other`}>\r\n          {\" \"}\r\n          <Posts />{\" \"}\r\n        </Route>\r\n        <Route path={`${match.path}`}>\r\n          {\" \"}\r\n          <MainProjects />{\" \"}\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"../css/App.css\";\nimport { HashRouter as Router, Switch, Route, NavLink } from \"react-router-dom\";\nimport About from \"./About\";\nimport Connect from \"./Connect\";\nimport Projects from \"./Projects\";\nimport avatar from \"../assets/avatar.jpg\";\n\nconst SideBar = () => {\n  return (\n    <div className=\"sidebar\">\n      <div className=\"avatar\">\n        <img src={avatar} alt=\"avatar\" />\n      </div>\n      <ul>\n        <li>\n          {\" \"}\n          <NavLink exact to=\"/profile\" activeClassName=\"active\">\n            {\" \"}\n            About{\" \"}\n          </NavLink>{\" \"}\n        </li>\n        <li>\n          {\" \"}\n          <NavLink to=\"/projects\" activeClassName=\"active\">\n            {\" \"}\n            Projects{\" \"}\n          </NavLink>{\" \"}\n        </li>\n        <li>\n          {\" \"}\n          <NavLink to=\"/connect\" activeClassName=\"active\">\n            {\" \"}\n            connect me{\" \"}\n          </NavLink>{\" \"}\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default function App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <SideBar />\n        <Switch>\n          <Route exact path=\"/profile\" component={About} />\n          <Route path=\"/projects\" component={Projects} />\n          <Route path=\"/connect\" component={Connect} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}