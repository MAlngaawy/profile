{"version":3,"sources":["assets/avatar.jpg","components/About.js","components/Connect.js","components/Projects.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","About","className","Connect","ToDo","notes","data","useState","myData","setData","id","username","note","done","delete","newNote","setNewNote","hide","setHide","handleChange","event","val","target","value","length","name","deleteNote","doneNote","Alert","color","type","placeholder","onChange","htmlFor","icon","faPlus","onClick","e","preventDefault","setTimeout","filter","map","key","faCircle","faTrashAlt","faCheckCircle","Other","Projects","match","useRouteMatch","pathname","useLocation","to","url","path","SideBar","src","avatar","Boolean","window","location","hostname","ReactDOM","render","exact","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3d2778b8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.d854840c.jpg\";","import React from 'react';\r\n\r\n\r\nexport default function About() {\r\n  return (\r\n    <div className='right-side about'>\r\n      <p><span>Hey</span> my name is Mohammed Abdulmpneim i'm a frontend developer with some backend knowledge</p>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\n\r\n\r\nexport default function Connect() {\r\n  return (\r\n    <div className='right-side connect'>\r\n      <h1>Connect Here</h1>\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useLocation,\r\n  useRouteMatch\r\n} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faTrashAlt, faCircle, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport data from '../api.json';\r\nimport { Alert } from 'reactstrap';\r\n\r\n\r\n// ToDo Component\r\nfunction ToDo() {\r\n  let notes = data;\r\n  const [myData, setData] = useState(notes);\r\n  const [newNote, setNewNote] = useState({\r\n    id: \"\",\r\n    username: \"\",\r\n    note: \"\",\r\n    done: false,\r\n    delete: false,\r\n  });\r\n  const [hide, setHide] = useState('d-none');\r\n\r\n  const handleChange = (event) => {\r\n    const val = event.target.value;\r\n    setNewNote({\r\n      ...newNote,\r\n      id: myData.length + 1,\r\n      [event.target.name]: val, // create a dynamic key name in the object\r\n    })\r\n  }\r\n\r\n  const  addNote = (e) => {\r\n    e.preventDefault();\r\n    if(newNote.username !== '' && newNote.note !== '') {\r\n      setData([...myData, newNote])\r\n      setNewNote({ ...newNote, username:'', note: ''})\r\n    } else {\r\n      setTimeout(() => {\r\n        setHide('');\r\n      }, 100)\r\n      setTimeout(() => {\r\n        setHide('d-none');\r\n      }, 2000)\r\n    }\r\n  }\r\n\r\n  const deleteNote = (note) => {\r\n    setData([...myData, myData[note.id - 1].delete = true])\r\n  }\r\n\r\n  const doneNote = (note) => {\r\n    setData([...myData, myData[note.id - 1].done = !myData[note.id - 1].done])\r\n  }\r\n\r\n  return (\r\n    <div className='todo-com'>\r\n      <div className='out-side'>\r\n        <Alert color=\"danger\" className={hide}>\r\n          You Can't add an empty note, Bitch!!!\r\n        </Alert>\r\n        <form>\r\n          <input\r\n            className='name-field'\r\n            type='text'\r\n            value={newNote.username}\r\n            name='username'\r\n            placeholder='Write Your Name'\r\n            onChange={handleChange}  \r\n          />\r\n          <input\r\n            className='note-field'\r\n            type='text'\r\n            value={newNote.note}\r\n            name='note'\r\n            placeholder='The Note...'\r\n            onChange={handleChange}\r\n          />\r\n          <label htmlFor='submit' className='add-note' > <FontAwesomeIcon icon={faPlus} /> </label>\r\n          <input type=\"submit\" id='submit' value='' className='add-note-btn' onClick={addNote} />\r\n        </form>\r\n      </div>\r\n      <div className='in-side'>\r\n\r\n      {/* For Not Done Notes */}\r\n      {myData.filter((note) => note.delete === false && note.done == false ).map((note) => \r\n        <div className='single-note' key={note.id}>\r\n          <div className='user-image'>Ma</div>\r\n          <div className='note-content'>\r\n            <h4 className='username'>{note.username}</h4>\r\n            <p className='the-note'>{note.note}</p>\r\n          </div>\r\n          <div className='command'>\r\n            <div className='done'>\r\n              <FontAwesomeIcon className='icon' icon={faCircle} onClick={() => doneNote(note)} />\r\n            </div>\r\n            <div className='delete'>\r\n              <FontAwesomeIcon className='icon' icon={faTrashAlt} onClick={() => deleteNote(note)} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* For Done Notes */}\r\n      {myData.filter((note) => note.done == true && note.delete == false).map((note) => \r\n        <div className='single-note done' key={note.id}>\r\n          <div className='user-image'>Ma</div>\r\n          <div className='note-content'>\r\n            <h4 className='username'>{note.username}</h4>\r\n            <p className='the-note'>{note.note}</p>\r\n          </div>\r\n          <div className='command'>\r\n            <div className='done'>\r\n               <FontAwesomeIcon className='icon' icon={faCheckCircle}onClick={() => doneNote(note)} />\r\n            </div>\r\n            <div className='delete'>\r\n              <FontAwesomeIcon className='icon' icon={faTrashAlt} onClick={() => deleteNote(note)} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nfunction Other() {\r\n  return (\r\n    <div>\r\n      <h1>Other App Here</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default function Projects() {\r\n  let match = useRouteMatch();\r\n  let { pathname } = useLocation();\r\n\r\n  return (\r\n    <div className='projects right-side'>\r\n      <div className='projects-navbar'>\r\n        <ul>\r\n          <li>\r\n            <Link to={`${match.url}/todo-app`} className={pathname === '/projects/todo-app'? 'active': ''} >ToDO App</Link>\r\n          </li>\r\n          <li>\r\n            <Link to={`${match.url}/other`} className={pathname === '/projects/other'? 'active': ''} >Other App</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <Switch>\r\n        <Route path={`${match.path}/:todo-app`}> <ToDo /> </Route>\r\n        <Route path={`${match.path}/:other`}> <Other /> </Route>\r\n        <Route path={`${match.path}`}> <h1>Please Add Any App</h1> </Route>\r\n      </Switch>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\nimport '../css/App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useLocation\n} from \"react-router-dom\";\nimport About from './About'\nimport Connect from './Connect'\nimport Projects from './Projects'\nimport avatar from '../assets/avatar.jpg'\n\n\nconst SideBar = () =>{\n  let { pathname } = useLocation();\n\n  return (\n    <div className=\"sidebar\">\n      <div className='avatar'>\n        <img src={avatar} />\n      </div>\n      <ul>\n        <li> <Link to=\"/\" className={pathname === '/' ? 'active' : ''}> About </Link> </li>\n        <li> <Link to=\"/projects\" className={pathname === '/projects' ? 'active' : ''}> Projects </Link> </li>\n        <li> <Link to=\"/connect\" className={pathname === '/connect' ? 'active' : ''}> connect me </Link> </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default function App() {\n  return (\n    <Router>\n      <div className='App'>\n        <SideBar />\n\n        <Switch>\n          <Route exact path=\"/\">\n            <About />\n          </Route>\n          <Route path=\"/projects\">\n            <Projects />\n          </Route>\n          <Route path=\"/connect\">\n            <Connect />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}